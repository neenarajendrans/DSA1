class Stack{
    constructor(){
        this.queue1 = [];
        this.queue2 = [];
    }
    push(value){
        this.queue1.push(value)
    }
    isEmpty(){
        return this.queue1.length ===0
    }
    pop(){
        if(!this.isEmpty()){
            while(this.queue1.length>1){
                this.queue2.push(this.queue1.shift())
            }
            let remove = this.queue1.shift();
            [this.queue1, this.queue2]= [this.queue2, this.queue1]
            return remove;
        }else{
            return "Stack is Empty"
        }
    }
    peek(){
        if(!this.isEmpty()){
            while(this.queue1.length>1){
                this.queue2.push(this.queue1.shift())
            }
            let top = this.queue1[0];
            this.queue2.push(this.queue1.shift()); // move the last element to queue2 before it is swapped with q1.
            [this.queue1, this.queue2]=[this.queue2, this.queue1];
            return top;
        }else{
            return "Stack is Empty"
        }
    }
    display(){
        return console.log(this.queue1);
        
    }
}
const stack2 = new Stack()
stack2.push(1);
stack2.push(2);
stack2.push(3);

console.log("Peek:", stack2.peek()); // Output: 3 (top of the stack)
console.log("Pop:", stack2.pop());   // Output: 3 (removes the top element)
stack2.display(); // Output: [2, 1] (remaining elements in the stack)